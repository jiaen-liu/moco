function wipmem=define_amri_epi_wipmem()
%function [wipmem_b,wipmem_d,wipmem_l]=define_amri_epi_wipmem()

%+
% NAME:
%     
%#
% FUNCTION:
%     
%
% USAGE:
%     
%
% INPUT:
%     
% OUTPUT:
%     
% RETURNS:
%     
%@
% CALLS:
%     
%
% DISCLAIMER AND CONDITIONS FOR USE:
%     Use of this software is at the user's OWN RISK. Functionality
%     is not guaranteed by creator nor modifier(s), if any.
%     This software may be freely copied and distributed. The original
%     header MUST stay part of the file and modifications MUST be
%     reported in the 'MODIFICATION HISTORY'-field, including the
%     modification date and the name of the modifier.
%
% CREATED:
%     June 1, 2018
%     Jacco de Zwart
%     LFMI, NINDS, National Institutes of Health, Bethesda, MD, USA
%     E-mail: Jacco.deZwart@nih.gov
%
% MODIFICATION HISTORY:
%     2020/11/20, JAdZ
%         This version was automatically generated by bash script
%         generate_amri_epi_wipmem_update.sh on 2020-11-20 11:35:37, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2020/11/23, JAdZ
%         Prefixes (wb_, ws_, etc.) are no longer stored, and a history of
%         changes is now recorded in this header, similar to the IDL version.
%         A single 'structure of structures' is now returned.
%     2020/12/04, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2020-12-04 04:00:34, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/14, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-14 04:01:00, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/16, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-16 04:01:24, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/23, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-23 04:02:24, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/26, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-26 09:46:37, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/29, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-29 04:00:53, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/01/30, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-01-30 04:01:17, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/02/12, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-02-12 15:51:25, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/02/12, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-02-12 15:53:15, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/02/12, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-02-12 15:55:41, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/02/12, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-02-12 17:19:27, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/20, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-20 04:00:49, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 17:06:06, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 17:22:49, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:01:18, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:04:30, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:16:23, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:17:15, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:23:16, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:24:54, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/03/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-03-24 18:27:08, based
%         on /samba/idea_vb17a/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/05/11, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-05-11 08:48:45, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/05/20, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-05-20 08:34:10, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/05/27, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-05-27 16:02:34, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/07, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-07 09:19:18, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/09, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-09 07:47:03, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/09, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-09 07:51:37, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/09, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-09 07:53:38, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/09, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-09 08:10:21, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/09, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-09 08:20:03, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/14, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-14 09:01:18, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/17, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-17 11:30:34, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/09/27, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-09-27 11:52:30, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/12/16, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-12-16 07:52:26, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2021/12/22, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2021-12-22 14:42:03, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/02/18, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-02-18 04:00:51, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/02/24, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-02-24 04:00:33, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/03/15, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-03-15 04:01:01, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/03/25, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-03-25 04:00:32, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/05/22, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-05-22 12:40:00, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/05/23, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-05-23 04:00:08, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/06/02, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-06-02 04:00:08, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%     2022/06/23, JAdZ
%         This version was automatically updated by bash script
%         generate_amri_epi_wipmem_update.sh on 2022-06-23 04:00:08, based
%         on /misc/imeel/dezwart/prog/siemens/seq/AMRI_epi/AMRI_epi_funct/AMRI_epi_wipmem.h.
%-

% The structure that describes tFree - convert 't' to true/1, 'f' to false/0
wipmem_b=struct('init',uint8(0));
wipmem_b=setfield(wipmem_b,'positive_only',uint8(0));
wipmem_b=setfield(wipmem_b,'short_te_ref',uint8(0));
wipmem_b=setfield(wipmem_b,'navigator',uint8(0));
wipmem_b=setfield(wipmem_b,'var_te',uint8(0));
wipmem_b=setfield(wipmem_b,'echo_shifting',uint8(0));
wipmem_b=setfield(wipmem_b,'on_scanner_recon',uint8(0));
wipmem_b=setfield(wipmem_b,'rt_shimming',uint8(0));
wipmem_b=setfield(wipmem_b,'rec_phys',uint8(0));
wipmem_b=setfield(wipmem_b,'no_prep_triggers',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_n_interleaves_steref',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_n_interleaves',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_crusher_area',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_var_te',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_n_sense_ref',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ramp_duration',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_rampsamp_frac',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_flag_toggled',uint8(0));
wipmem_b=setfield(wipmem_b,'spin_echo',uint8(0));
wipmem_b=setfield(wipmem_b,'is_gre',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_se_slthick_fact',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_n_recon_volumes',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_nav_res_r',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_nav_res_p',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_nav_res_s',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_respiratory_gain',uint8(0));
wipmem_b=setfield(wipmem_b,'ethernet_10gbe',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_steref_res_r',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_steref_res_p',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_steref_res_s',uint8(0));
wipmem_b=setfield(wipmem_b,'first_nav_short_te',uint8(0));
wipmem_b=setfield(wipmem_b,'fatsat',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_fatsat_angle',uint8(0));
wipmem_b=setfield(wipmem_b,'ir_bunch_slices',uint8(0));
wipmem_b=setfield(wipmem_b,'ir_auto_ti',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ir_max_ti',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ir_crush',uint8(0));
wipmem_b=setfield(wipmem_b,'linked_bandwidth',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_nav_bandwidth',uint8(0));
wipmem_b=setfield(wipmem_b,'anonymize_raw_data',uint8(0));
wipmem_b=setfield(wipmem_b,'var_te_cyclic',uint8(0));
wipmem_b=setfield(wipmem_b,'var_te_fastloop',uint8(0));
wipmem_b=setfield(wipmem_b,'debug_mode',uint8(0));
wipmem_b=setfield(wipmem_b,'debug_writable',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_echo_spacing',uint8(0));
wipmem_b=setfield(wipmem_b,'binomial_excitation',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_nav_polarity',uint8(0));
wipmem_b=setfield(wipmem_b,'ir_bunch_interleaved',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ste_te',uint8(0));
wipmem_b=setfield(wipmem_b,'have_ptx',uint8(0));
wipmem_b=setfield(wipmem_b,'var_te_refonly',uint8(0));
wipmem_b=setfield(wipmem_b,'pe_from_file',uint8(0));
wipmem_b=setfield(wipmem_b,'flow_compensation',uint8(0));
wipmem_b=setfield(wipmem_b,'steam',uint8(0));
wipmem_b=setfield(wipmem_b,'flow_selective',uint8(0));
wipmem_b=setfield(wipmem_b,'steam_phase_cycle',uint8(0));
wipmem_b=setfield(wipmem_b,'cycle_grsl',uint8(0));
wipmem_b=setfield(wipmem_b,'ste_pos_only',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ste_rsamp',uint8(0));
wipmem_b=setfield(wipmem_b,'ste_fit_blips',uint8(0));
wipmem_b=setfield(wipmem_b,'int_te_shift',uint8(0));
wipmem_b=setfield(wipmem_b,'ste_inv_ro',uint8(0));
wipmem_b=setfield(wipmem_b,'steam_ws',uint8(0));
wipmem_b=setfield(wipmem_b,'soft_crh',uint8(0));
wipmem_b=setfield(wipmem_b,'epi_sin',uint8(0));
wipmem_b=setfield(wipmem_b,'cos_pe',uint8(0));
wipmem_b=setfield(wipmem_b,'debug_mode2',uint8(0));
wipmem_b=setfield(wipmem_b,'test_vtx',uint8(0));
wipmem_b=setfield(wipmem_b,'dbl_fatsat',uint8(0));
wipmem_b=setfield(wipmem_b,'steam_bin4',uint8(0));
wipmem_b=setfield(wipmem_b,'sms_spacing_fixed',uint8(0));
wipmem_b=setfield(wipmem_b,'bloch_siegert',uint8(0));
wipmem_b=setfield(wipmem_b,'bloch_siegert_alternate',uint8(0));
wipmem_b=setfield(wipmem_b,'sl_enc_fast',uint8(0));
wipmem_b=setfield(wipmem_b,'rawdata_target_ip_mod',uint8(0));
wipmem_b=setfield(wipmem_b,'rawdata_target_port_mod',uint8(0));
wipmem_b=setfield(wipmem_b,'balanced_ssfp',uint8(0));
wipmem_b=setfield(wipmem_b,'test_freq',uint8(0));
wipmem_b=setfield(wipmem_b,'slice_tagging',uint8(0));
wipmem_b=setfield(wipmem_b,'sspl',uint8(0));
wipmem_b=setfield(wipmem_b,'fair',uint8(0));
wipmem_b=setfield(wipmem_b,'ssfp_3d_gradsep',uint8(0));
wipmem_b=setfield(wipmem_b,'rt_shim_delay_fixed',uint8(0));
wipmem_b=setfield(wipmem_b,'flow_encoding',uint8(0));
wipmem_b=setfield(wipmem_b,'alternate_fe',uint8(0));
wipmem_b=setfield(wipmem_b,'debug_save',uint8(0));
wipmem_b=setfield(wipmem_b,'reload_rf',uint8(0));
wipmem_b=setfield(wipmem_b,'vaso',uint8(0));
wipmem_b=setfield(wipmem_b,'fit_blips',uint8(0));
wipmem_b=setfield(wipmem_b,'fixed_ste_rtime',uint8(0));
wipmem_b=setfield(wipmem_b,'vte_crush_del',uint8(0));
wipmem_b=setfield(wipmem_b,'ssfp_quad_phase',uint8(0));
wipmem_b=setfield(wipmem_b,'ro_inv_grad',uint8(0));
wipmem_b=setfield(wipmem_b,'fair_sel_ref',uint8(0));
wipmem_b=setfield(wipmem_b,'bunch_no_cyc',uint8(0));
wipmem_b=setfield(wipmem_b,'rampsampling',uint8(0));
wipmem_b=setfield(wipmem_b,'ste_rsampling',uint8(0));
wipmem_b=setfield(wipmem_b,'adj_ro_gres',uint8(0));
wipmem_b=setfield(wipmem_b,'diff_fc',uint8(0));
wipmem_b=setfield(wipmem_b,'diff_rt_fixed',uint8(0));
wipmem_b=setfield(wipmem_b,'experimental',uint8(0));
wipmem_b=setfield(wipmem_b,'refocus_duration_linked',uint8(0));
wipmem_b=setfield(wipmem_b,'refocus_r_crusher_off',uint8(0));
wipmem_b=setfield(wipmem_b,'refocus_p_crusher_off',uint8(0));
wipmem_b=setfield(wipmem_b,'refocus_s_crusher_off',uint8(0));
wipmem_b=setfield(wipmem_b,'caipi',uint8(0));
wipmem_b=setfield(wipmem_b,'stable_binary',uint8(0));
wipmem_b=setfield(wipmem_b,'reset_error',uint8(0));
wipmem_b=setfield(wipmem_b,'alt_invmt',uint8(0));

% The structure that describes dFree
wipmem_d=struct('seq_version',double(0));
wipmem_d=setfield(wipmem_d,'rampsamp_frac',double(0));
wipmem_d=setfield(wipmem_d,'scramble_angle_deg',double(0));
wipmem_d=setfield(wipmem_d,'crusher_area_r',double(0));
wipmem_d=setfield(wipmem_d,'crusher_area_p',double(0));
wipmem_d=setfield(wipmem_d,'crusher_area_s',double(0));
wipmem_d=setfield(wipmem_d,'echo_time_steref_us',double(0));
wipmem_d=setfield(wipmem_d,'rf_bandw_time_prod',double(0));
wipmem_d=setfield(wipmem_d,'se_pulse_phase',double(0));
wipmem_d=setfield(wipmem_d,'se_slthick_fact',double(0));
wipmem_d=setfield(wipmem_d,'fatsat_angle_deg',double(0));
wipmem_d=setfield(wipmem_d,'mtc_angle_deg',double(0));
wipmem_d=setfield(wipmem_d,'b_diff_x_smms',double(0));
wipmem_d=setfield(wipmem_d,'b_diff_y_smms',double(0));
wipmem_d=setfield(wipmem_d,'b_diff_z_smms',double(0));

% The structure that describes dFree
wipmem_l=struct('dev_id',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'seq_id',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'gui_page_nr',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_interleaves',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ramp_duration_us',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'spin_echo_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'nav_dim_r',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'nav_dim_p',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'nav_dim_s',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'nav_bandwidth',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'sense_rate_p',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'sense_rate_s',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_sense_ref',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_interleaves_steref',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'nav_type',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_var_te',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'echoshift_n_tr',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_noiserep',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'recon_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_blipoff_vol',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'rt_shim_delay_us',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ttl_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ttl_interval_tr',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'actual_rsamp',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'physio_channel_bitmask',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'compilation_timestamp',zeros(1,1,'uint32'));
wipmem_l=setfield(wipmem_l,'rf_excitation_duration_us',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'n_ref_echoes',zeros(1,12,'int16'));
wipmem_l=setfield(wipmem_l,'spin_echo_bitmask',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'n_recon_volumes',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'lag_time',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'navigator_bitmask',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'epi_polarity_bitmask',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'nav_polarity_bitmask',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'acqstart_timestamp',zeros(1,1,'uint32'));
wipmem_l=setfield(wipmem_l,'steref_dim_r',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steref_dim_p',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steref_dim_s',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steref_bandwidth',zeros(1,1,'int32'));
wipmem_l=setfield(wipmem_l,'steref_n_echoes',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ir_n_pulses',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ir_n_ti',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ir_max_ti',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ir_t1_of_interest',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtc_offset_hz',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steref_last_echo_delay',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ir_duration_us',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ir_crusher_area',zeros(1,2,'int16'));
wipmem_l=setfield(wipmem_l,'n_inversion_off',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'var_te_array',zeros(1,4,'uint16'));
wipmem_l=setfield(wipmem_l,'var_te_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'pulse_mode',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtinv_b1',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtinv_frq_fac',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtinv_tim_fac',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtinv_b1_2nd',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ir_duration_us_2nd',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'hypersec_sep_us',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'dummy_shots',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'n_inversion_off_end',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'echo_spacing',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'binomial_target_ppb',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'binomial_separation_us',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ttl_offset_tr',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ir_pulse_train_length',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'grad_performance',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ptx_channel_mask',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'mtinv_grd_amp_10utm',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'eddy_cur_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steam_slfac',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'steam_tm_ms',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'steam_td_ms',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'steam_cs_area',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'flow_sel_sl_100ums',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'binomial_bal',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste_srate_p',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste_srate_s',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste_rsamp',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ste_pe_step',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste_sl_step',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steam_ws_flip1',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'steam_ws_flip2',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'steam_ws_flip3',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'ste3d_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste3d_entry',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'steam_ws_len',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'sms_factor',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'sms_spacing_10um',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'bloch_siegert_freq',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'bloch_siegert_phase',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'pe3d_mode',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'pe3d_entry',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'rawdata_target_ip',zeros(1,1,'uint32'));
wipmem_l=setfield(wipmem_l,'rawdata_target_port',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'sspl_inv1_offset',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'amri_error_nr',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'flow_sel_pe_100ums',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'flow_sel_ro_100ums',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'flow_ramptime',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'ste_rtime',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'sspl_inv2_offset',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'tdiff_ms',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'diff_ramptime',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'epi_mode',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'rf_refocus_duration_us',zeros(1,1,'int16'));
wipmem_l=setfield(wipmem_l,'necho_blip',zeros(1,1,'uint16'));
wipmem_l=setfield(wipmem_l,'contr_no_acq_bitmask',zeros(1,1,'uint32'));
wipmem_l=setfield(wipmem_l,'dual_se_bitmask',zeros(1,1,'uint32'));
wipmem_l=setfield(wipmem_l,'dual_ref_pos_array',zeros(1,12,'uint16'));

% combine the three structures into one overall structure
wipmem=struct('wipmem_b',wipmem_b);
wipmem=setfield(wipmem,'wipmem_d',wipmem_d);
wipmem=setfield(wipmem,'wipmem_l',wipmem_l);
